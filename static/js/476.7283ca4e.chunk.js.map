{"version":3,"file":"static/js/476.7283ca4e.chunk.js","mappings":"mLAMIA,EAAoB,CACtBC,EAAC,WACC,OAAO,IAAIC,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,aACNC,OAAQ,6BACRC,KAAM,GAEV,EACAC,EAAC,SAACC,EAAWF,GACX,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,aACNC,OAAQ,wBAAFI,OAA2BD,EAAS,yBAAAC,OAAyBH,GACnEA,KAAAA,GAEJ,EACAI,EAAC,SAACC,EAASL,GACT,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,aACNC,OAAQ,sBAAFI,OAAyBE,EAAO,yBAAAF,OAAyBH,GAC/DA,KAAAA,GAEJ,EACAM,EAAC,SAACJ,EAAWG,EAASL,GACpB,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,aACNC,OAAQ,sBAAFI,OAAyBE,EAAO,6BAAAF,OAA8BD,EAAS,cAAAC,OAAcH,GAC3FA,KAAAA,GAEJ,EACAO,EAAC,SAACC,EAAMC,EAAOT,GACb,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,gBACNC,OAAQ,kCAAFI,OAAqCK,EAAI,cAAAL,OAAcH,EAAI,aAAAG,OAAYM,EAAK,KAClFT,KAAAA,GAEJ,EACAU,EAAC,SAACF,EAAMC,EAAOT,GACb,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,eACNC,OAAQ,wBAAFI,OAA2BK,EAAI,cAAAL,OAAcH,EAAI,aAAAG,OAAYM,EAAK,KACxET,KAAAA,GAEJ,EACAW,EAAC,SAACH,EAAMC,EAAOT,GACb,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,gBACNC,OAAQ,qCAAFI,OAAwCK,EAAI,cAAAL,OAAcH,EAAI,aAAAG,OAAYM,EAAK,KACrFT,KAAAA,GAEJ,EACAY,EAAC,SAACJ,EAAMC,EAAOT,GACb,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,eACNC,OAAQ,2BAAFI,OAA8BK,EAAI,cAAAL,OAAcH,EAAI,aAAAG,OAAYM,EAAK,KAC3ET,KAAAA,GAEJ,EAEAa,EAAC,SAACC,EAAMd,GACN,OAAO,IAAIJ,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAAA,UACNC,OAAQ,uBAAFI,OAA0BW,EAAI,oBAAAX,OAAoBH,GACxDA,KAAAA,GAEJ,E","sources":["../node_modules/media-captions/dist/chunks/errors-7ZCJBJFL.js"],"sourcesContent":["import {\n  ParseError,\n  ParseErrorCode\n} from \"./chunk-NKFR2J3N.js\";\n\n// src/parse/errors.ts\nvar ParseErrorBuilder = {\n  P() {\n    return new ParseError({\n      code: ParseErrorCode.BadSignature,\n      reason: \"missing WEBVTT file header\",\n      line: 1\n    });\n  },\n  E(startTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue start timestamp \\`${startTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  F(endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  G(startTime, endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is greater than start \\`${startTime}\\` on line ${line}`,\n      line\n    });\n  },\n  Q(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  R(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  S(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  T(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  // SSA-specific errors\n  H(type, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadFormat,\n      reason: `format missing for \\`${type}\\` block on line ${line}`,\n      line\n    });\n  }\n};\nexport {\n  ParseErrorBuilder\n};\n"],"names":["ParseErrorBuilder","P","ParseError","code","ParseErrorCode","reason","line","E","startTime","concat","F","endTime","G","Q","name","value","R","S","T","H","type"],"sourceRoot":""}